#import "WLTX_CommonSelectAreaVC.h"
#import "WLTX_CommonCityCell.h"
#import "ProvincesView.h"
#import "CityView.h"
#import "AreaView.h"

#import "CommonCityView.h"
#ifdef DEBUG

#define NSLog(format, ...) printf("class: <%p %s:(%d) > method: %s \n%s\n", self, [[[NSString stringWithUTF8String:__FILE__] lastPathComponent] UTF8String], __LINE__, __PRETTY_FUNCTION__, [[NSString stringWithFormat:(format), ##__VA_ARGS__] UTF8String] )

#else

#define NSLog(format, ...)

#endif


@interface WLTX_CommonSelectAreaVC ()
<ProvincesViewDelegate,
CityViewDelegate,
AreaViewDelegate,
CommonCityViewDelegate,
UISearchBarDelegate>
@property (weak, nonatomic) IBOutlet UIView *view_coomonUseCity; // Â∏∏Áî®ÂüéÂ∏Ç
@property (weak, nonatomic) IBOutlet UIView *view_SelectCity;   // ÈÄâÊã©ÂüéÂ∏Ç

@property (weak, nonatomic) IBOutlet UIView *view_cityContent;

// ÂüéÂ∏ÇÊìç‰Ωú
//ÁúÅÊï∞ÁªÑ
@property NSArray *arrProvince;
//Â∏ÇÊï∞ÁªÑ
@property NSArray *arrCity;
//Âå∫Êï∞ÁªÑ
@property NSArray *arrDistrict;
// Â∏∏Áî®ÂüéÂ∏ÇÊï∞ÊçÆ
@property NSMutableArray *commonUseCity;


// ÈÄâÊã©Êìç‰Ωú
@property (weak, nonatomic) IBOutlet UIImageView *img_1;
@property (weak, nonatomic) IBOutlet UIButton *btn_1;

@property (weak, nonatomic) IBOutlet UIImageView *img_2;
@property (weak, nonatomic) IBOutlet UIButton *btn_2;

@property (weak, nonatomic) IBOutlet UIImageView *img_3;
@property (weak, nonatomic) IBOutlet UIButton *btn_3;


// searchÊòæÁ§∫ÁöÑÂÜÖÂÆπ
@property (nonatomic,strong) NSString *pStr;
@property (nonatomic,strong) NSString *cStr;
@property (nonatomic,strong) NSString *aStr;
@property (strong,nonatomic) NSString *recordClickAllCityTitle; // ËÆ∞ÂΩïÁÇπÂáªÂüéÂ∏ÇÂå∫
@property (weak, nonatomic) IBOutlet UISearchBar *search;
@property (strong,nonatomic) NSMutableArray *showDataArr; //  ÊòæÁ§∫ÁöÑ
@property (strong,nonatomic) NSMutableArray *selectDataArr; // ÈÄâÊã©ÁöÑÊó∂ÂÄô ÊòæÁ§∫ÁöÑ

// Êéß‰ª∂
@property (nonatomic,strong) ProvincesView *provincesView;
@property (nonatomic,strong) CityView *cityView;
@property (nonatomic,strong) AreaView *areaView;
@property (nonatomic,strong) CommonCityView *commonCityView;


//
@property (weak, nonatomic) IBOutlet UITableView *tableview;

@end

@implementation WLTX_CommonSelectAreaVC

#pragma mark - ‚ôªÔ∏è ËßÜÂõæÁöÑÁîüÂëΩÂë®Êúü view life cycle start
/*
 4-1„ÄÅÁ¨¨‰∏Ä‰∏™ÊâßË°åÁöÑÊñπÊ≥ïÔºåÂä†ËΩΩUIÔºö- (void)loadView{ }
 4-2„ÄÅÁ¨¨‰∫å‰∏™ÊâßË°åÁöÑÊñπÊ≥ïÔºåÂä†ËΩΩUIÊàêÂäüÂêéË∞ÉÁî®Ôºö- (void)viewDidLoad{ }
 4-3„ÄÅÁ¨¨‰∏â‰∏™ÊâßË°åÊñπÊ≥ïÔºåUIÂç≥Â∞ÜÊòæÁ§∫Êó∂Ôºö- (void)viewWillAppear:(BOOL)animated{ }
 4-4„ÄÅÁ¨¨Âõõ‰∏™ÊâßË°åÊñπÊ≥ïÔºåUIÂ∑≤ÁªèÊòæÁ§∫Êó∂Ôºö- (void)viewDidAppear:(BOOL)animated{ }
 4-5„ÄÅÁ¨¨‰∫î‰∏™ÊâßË°åÊñπÊ≥ïÔºåUIÂç≥Â∞ÜÊ∂àÂ§±Êó∂Ôºö- (void)viewWillDisappear:(BOOL)animated{ }
 4-6„ÄÅÁ¨¨ÂÖ≠‰∏™ÊâßË°åÊñπÊ≥ïÔºåUIÂ∑≤ÁªèÊ∂àÂ§±Êó∂Ôºö- (void)viewDidDisappear:(BOOL)animated{ }
 4-7„ÄÅÊúÄÂêéÊâßË°åÊñπÊ≥ïÔºåÂç≥ËßÜÂõæÊéßÂà∂Âô®Ê≥®ÈîÄÊñπÊ≥ïÔºö- (void)dealloc { }
 4-8„ÄÅËØ•ÊñπÊ≥ïÂú®Êé•Êî∂Âà∞ÂÜÖÂ≠òË≠¶ÂëäÊó∂‰ºöË∞ÉÁî®Ôºå‰∏îÁ≥ªÁªü‰ºöËá™Âä®Â§ÑÁêÜÂÜÖÂ≠òÈáäÊîæÔºö- (void)didReceiveMemoryWarning { }
 */

- (void)viewDidLoad
{
    [super viewDidLoad];
    [self commonSelectAreaVC_settingsInitData];
    
}
- (void)dealloc
{
    //    [super dealloc];
    // ÁßªÈô§ÈÄöÁü•Â§ÑÁêÜ
}
- (void)viewWillAppear:(BOOL)animated
{
    [super viewWillAppear:animated];
    
}
- (void)viewDidAppear:(BOOL)animated
{
    [super viewDidAppear:animated];
}
- (void)viewWillDisappear:(BOOL)animated
{
    [super viewWillDisappear:animated];
}
- (void)viewDidDisappear:(BOOL)animated
{
    [super viewWillDisappear:animated];
}


- (void)didReceiveMemoryWarning
{
    [super didReceiveMemoryWarning];
}
#pragma mark ‚ôªÔ∏è ËßÜÂõæÁöÑÁîüÂëΩÂë®Êúü view life cycle end


#pragma mark - üèÉ(‰ª£ÁêÜ)Delegate start
#pragma mark üèÉ(‰ª£ÁêÜ)Delegate end
#pragma mark - ‚úçüèª(Ëá™ÂÆö‰πâÊñπÊ≥ï) custom method start
/**
 ÁôªÈôÜÈ°µÈù¢ ÂàùÂßãÂåñÊï∞ÊçÆ
 */
- (void)commonSelectAreaVC_settingsInitData
{
    NSLog(@"ÂàùÂßãÂåñÊï∞ÊçÆ");
    self.pStr = @"";
    self.cStr = @"";
    self.aStr = @"";
    [self CommonSelectAreaVC_settingsNav];
//    [self loadCityData]; 20190620 ‰øÆÊîπ
    [self loadCityDataNetworkingData];
}
/**
 ÁôªÈôÜÈ°µÈù¢ËÆæÁΩÆ nav
 */
- (void)CommonSelectAreaVC_settingsNav
{
    self.view.backgroundColor = UIColorFromRGB(0xF5F5F5);
    UIButton *backButton = [UIButton buttonWithType:UIButtonTypeCustom];
    [backButton setTitle:@"Á°ÆÂÆö" forState:0];
    [backButton setTitleColor:[UIColor blackColor] forState:0];
    backButton.contentHorizontalAlignment = UIControlContentHorizontalAlignmentCenter;
    [backButton addTarget:self action:@selector(determineSelectCity:) forControlEvents:UIControlEventTouchUpInside];
    self.navigationItem.rightBarButtonItem = [[UIBarButtonItem alloc] initWithCustomView:backButton];
}
- (void)determineSelectCity:(UIButton *)btn
{
    NSLog(@"Á°ÆÂÆö");
    // Â∞ÜÊòæÁ§∫ÁöÑÂÜÖÂÆπ Ê∑ªÂä†Êú¨Âú∞Âπ∂‰∏îÁºìÂ≠òËµ∑Êù•
    // Â¶ÇÊûúÁÇπÂáª ÈúÄË¶ÅÂ§ÑÁêÜ ÊãøÂà∞ÂüéÂ∏ÇÂå∫ÈáåÈù¢ÁöÑÂ∏Ç Âπ∂‰∏îÂéªÊéâÂ∏Ç
    // Â¶ÇÊûúÊòØÁÇπÂáªtableviewÁöÑitem ÈÉΩË¶ÅËÆ∞ÂΩïËµ∑Êù•
    // ÊúÄÂ§ö‰øùÂ≠ò10Êù°
    NSLog(@"Ê∑ªÂä†Êï∞ÊçÆÂà∞Â∏∏Áî®ÂüéÂ∏ÇÈáåÈù¢");
    
    //    NSDictionary *
    NSMutableDictionary *dict = [NSMutableDictionary dictionary];
    [dict setObject:self.recordClickAllCityTitle forKey:@"showTitle"];
    [dict setObject:self.cStr forKey:@"getTitle"];
    if (self.commonUseCity.count >=10) {
        NSLog(@"Á¨¨0‰∏™‰∏ãÊ†áÁöÑÊï∞ÁªÑÊòØ %@",self.commonUseCity[0]);
        [self.commonUseCity removeObjectAtIndex:0];
        
    }
    [self.commonUseCity addObject:dict];
    NSLog(@"commonUseCity %@",self.commonUseCity);
    // ‰øùÂ≠òÂà∞Êú¨Âú∞
    NSArray *arr = [self.commonUseCity copy];
    // Â≠òÂÇ®
    NSUserDefaults *userD = [NSUserDefaults standardUserDefaults];
    [userD setObject:arr forKey:@"commonUseCity"];
    NSLog(@"commonUseCity %@",[userD objectForKey:@"commonUseCity"]);
    [self.tableview reloadData];
    
    
    if (self.type == WLTX_CommonSelectAreaType_ReleaseCarInfo) {
        self.block(self.recordClickAllCityTitle,self.type);
    }
    else
    {
        
        if (self.block) {
            if ([self.recordClickAllCityTitle containsString:@"-"]) {
                
                NSArray *array = [self.recordClickAllCityTitle componentsSeparatedByString:@"-"];
                NSString *lastObjc = [array lastObject];
                NSLog(@"ÊúÄÂêéÁöÑÂ≠óÁ¨¶‰∏≤ÊòØ %@",lastObjc);
                NSLog(@"Âõû‰º†ÁöÑÂ≠óÁ¨¶‰∏≤ ÁúÅÂ∏ÇÂå∫ %@",self.recordClickAllCityTitle);
                self.block(lastObjc,self.type);
            }
            else
            {
                
                NSLog(@"Âõû‰º†ÁöÑÂ≠óÁ¨¶‰∏≤ ÁúÅÂ∏ÇÂå∫ %@",self.recordClickAllCityTitle);
                self.block(self.recordClickAllCityTitle,self.type);
            }
          
        }
    }
    
    [self.navigationController popViewControllerAnimated:YES];
    
}

#pragma mark  ‚úçüèª(Ëá™ÂÆö‰πâÊñπÊ≥ï) custom method end

- (IBAction)selectType:(UIButton *)sender {
    // Áªü‰∏ÄÂõûÂ§çÈªòËÆ§Êìç‰Ωú
    //
    [self.btn_1 setTitleColor:[UIColor whiteColor] forState:0];
    [self.btn_2 setTitleColor:[UIColor whiteColor] forState:0];
    [self.btn_3 setTitleColor:[UIColor whiteColor] forState:0];
    
    
    self.img_1.image = [UIImage imageNamed:@""];
    self.img_2.image = [UIImage imageNamed:@""];
    self.img_3.image = [UIImage imageNamed:@""];
    
    switch (sender.tag) {
        case 11:
        {
            NSLog(@"ÁúÅ‰ªΩ");
            [self.btn_1 setTitleColor:[UIColor orangeColor] forState:0];
            self.img_1.image = [UIImage imageNamed:@"integratedQuery_tu03"];
            self.cityView.hidden = YES;
            self.areaView.hidden = YES;
            self.provincesView.hidden = NO;
        }
            break;
        case 12:
        {
            NSLog(@"Â∏Ç");
            [self.btn_2 setTitleColor:[UIColor orangeColor] forState:0];
            self.img_2.image = [UIImage imageNamed:@"integratedQuery_tu04"];
            self.provincesView.hidden = YES;
            self.areaView.hidden = YES;
            self.cityView.hidden = NO;
            
        }
            break;
        case 13:
        {
            NSLog(@"Âå∫");
            [self.btn_3 setTitleColor:[UIColor orangeColor] forState:0];
            self.img_3.image = [UIImage imageNamed:@"integratedQuery_tu04"];
            self.provincesView.hidden = YES;
            self.cityView.hidden = YES;
            self.areaView.hidden = NO;
            
        }
            break;
            
        default:
            break;
    }
}

- (void)loadCityData
{
    NSBundle *bundle = [NSBundle mainBundle];
    //    NSString *plistPath = [bundle pathForResource:@"address" ofType:@"plist"];
    NSString *plistPath = [bundle pathForResource:@"area20190608" ofType:@"plist"];
    NSDictionary*addressDic = [[NSDictionary alloc] initWithContentsOfFile:plistPath];
    
    //    _arrProvince=[addressDic objectForKey:@"address"];
    //    _arrCity=[[_arrProvince objectAtIndex:0] objectForKey:@"sub"];
    //    _arrDistrict=[[_arrCity objectAtIndex:0] objectForKey:@"sub"];
    
    _arrProvince=[addressDic objectForKey:@"address"];
    _arrCity=[[_arrProvince objectAtIndex:0] objectForKey:@"city"];
    _arrDistrict=[[_arrCity objectAtIndex:0] objectForKey:@"area"];
    
    //    NSLog(@" ÁúÅ‰ªΩ is %@, ÂüéÂ∏Ç is %@, Âå∫Âüü is %@",_arrProvince,_arrCity,_arrDistrict);
    
    NSLog(@" ÁúÅ‰ªΩ is %@",_arrProvince);
    
    NSMutableArray <NSString *> *provinceStrArr = [NSMutableArray array];
    for (NSDictionary *dict in _arrProvince) {
        NSString *provinceName = dict[@"name"];
        [provinceStrArr addObject:provinceName];
    }
    
    NSLog(@"ProvinceArr %@",provinceStrArr);
    
    _arrCity = [[_arrProvince objectAtIndex:2]objectForKey:@"city"];
    // NSLog(@"ÈÄâ‰∏≠ÁúÅ‰ªΩÁöÑÂüéÂ∏Ç %@",_arrCity);
    NSMutableArray <NSString *> *arrCityStrArr = [NSMutableArray array];
    for (NSDictionary *dict in _arrCity) {
        NSString *arrCityName = dict[@"name"];
        [arrCityStrArr addObject:arrCityName];
    }
    NSLog(@"arrCityStrArr %@",arrCityStrArr);
    
    
    _arrDistrict = [[_arrCity objectAtIndex:0]objectForKey:@"area"];
    // NSLog(@"ÈÄâ‰∏≠ÁúÅ‰ªΩÁöÑÂüéÂ∏Ç %@",_arrCity);
    NSMutableArray <NSString *> *arrDistrictStrArr = [NSMutableArray array];
    for (NSString *arrDistrictName in _arrDistrict) {
        //        NSString *arrDistrictName = dict[@"name"];
        [arrDistrictStrArr addObject:arrDistrictName];
    }
    NSLog(@"arrDistrictStrArr %@",arrDistrictStrArr);
    
    
    NSLog(@"select index 1 is arrDistrictStrArr %@",arrDistrictStrArr[1]);
    
    [self.view_coomonUseCity addSubview:self.commonCityView];
    self.commonCityView.dataArr = self.commonUseCity;
    [self.view_SelectCity addSubview:self.provincesView];
    self.provincesView.dataArr = provinceStrArr;
}

- (void)loadCityDataNetworkingData
{
    NSLog(@"wÁΩëÁªúËé∑ÂèñÂüéÂ∏ÇÊï∞ÊçÆ");
    [self netwrok_getJsonCityData];
//    NSBundle *bundle = [NSBundle mainBundle];
//    //    NSString *plistPath = [bundle pathForResource:@"address" ofType:@"plist"];
//    NSString *plistPath = [bundle pathForResource:@"area20190608" ofType:@"plist"];
//    NSDictionary*addressDic = [[NSDictionary alloc] initWithContentsOfFile:plistPath];
//
//    //    _arrProvince=[addressDic objectForKey:@"address"];
//    //    _arrCity=[[_arrProvince objectAtIndex:0] objectForKey:@"sub"];
//    //    _arrDistrict=[[_arrCity objectAtIndex:0] objectForKey:@"sub"];
//
//    _arrProvince=[addressDic objectForKey:@"address"];
//    _arrCity=[[_arrProvince objectAtIndex:0] objectForKey:@"city"];
//    _arrDistrict=[[_arrCity objectAtIndex:0] objectForKey:@"area"];
//
//    //    NSLog(@" ÁúÅ‰ªΩ is %@, ÂüéÂ∏Ç is %@, Âå∫Âüü is %@",_arrProvince,_arrCity,_arrDistrict);
//
//    NSLog(@" ÁúÅ‰ªΩ is %@",_arrProvince);
//
//    NSMutableArray <NSString *> *provinceStrArr = [NSMutableArray array];
//    for (NSDictionary *dict in _arrProvince) {
//        NSString *provinceName = dict[@"name"];
//        [provinceStrArr addObject:provinceName];
//    }
//
//    NSLog(@"ProvinceArr %@",provinceStrArr);
//
//    _arrCity = [[_arrProvince objectAtIndex:2]objectForKey:@"city"];
//    // NSLog(@"ÈÄâ‰∏≠ÁúÅ‰ªΩÁöÑÂüéÂ∏Ç %@",_arrCity);
//    NSMutableArray <NSString *> *arrCityStrArr = [NSMutableArray array];
//    for (NSDictionary *dict in _arrCity) {
//        NSString *arrCityName = dict[@"name"];
//        [arrCityStrArr addObject:arrCityName];
//    }
//    NSLog(@"arrCityStrArr %@",arrCityStrArr);
//
//
//    _arrDistrict = [[_arrCity objectAtIndex:0]objectForKey:@"area"];
//    // NSLog(@"ÈÄâ‰∏≠ÁúÅ‰ªΩÁöÑÂüéÂ∏Ç %@",_arrCity);
//    NSMutableArray <NSString *> *arrDistrictStrArr = [NSMutableArray array];
//    for (NSString *arrDistrictName in _arrDistrict) {
//        //        NSString *arrDistrictName = dict[@"name"];
//        [arrDistrictStrArr addObject:arrDistrictName];
//    }
//    NSLog(@"arrDistrictStrArr %@",arrDistrictStrArr);
//
//
//    NSLog(@"select index 1 is arrDistrictStrArr %@",arrDistrictStrArr[1]);
//
//    [self.view_coomonUseCity addSubview:self.commonCityView];
//    self.commonCityView.dataArr = self.commonUseCity;
//    [self.view_SelectCity addSubview:self.provincesView];
//    self.provincesView.dataArr = provinceStrArr;
}

#pragma mark - ÊáíÂä†ËΩΩ
- (ProvincesView *)provincesView
{
    if (!_provincesView) {
        NSLog(@"provincesView %2f %p",self.view_SelectCity.frame.size.height,self.view_SelectCity);
        NSLog(@"view_cityContent.frame %2f",CGRectGetMaxY(self.view_cityContent.frame));
        NSLog(@"view_cityContent.frame %2f",[UIScreen mainScreen].bounds.size.height);
        NSLog(@"view_cityContent.frame %2f",[UIScreen mainScreen].bounds.size.height);
        
        //        _provincesView = [[ProvincesView alloc]initWithFrame:CGRectMake(0, 0, [UIScreen mainScreen].bounds.size.width,  CGRectGetHeight(self.view_SelectCity.frame))];
        _provincesView = [[ProvincesView alloc]initWithFrame:CGRectMake(0, 0, [UIScreen mainScreen].bounds.size.width,  CGRectGetHeight(self.view_SelectCity.frame))];
        
        _provincesView.delegate = self;
    }
    return _provincesView;
}
- (CityView *)cityView
{
    if (!_cityView) {
        NSLog(@"provincesView %2f",self.view_SelectCity.frame.size.height);
        _cityView = [[CityView alloc]initWithFrame:CGRectMake(0, 0, [UIScreen mainScreen].bounds.size.width,  CGRectGetHeight(self.view_SelectCity.frame))];
        _cityView.delegate = self;
    }
    return _cityView;
}
- (AreaView *)areaView
{
    if (!_areaView) {
        NSLog(@"provincesView %2f",self.view_SelectCity.frame.size.height);
        _areaView = [[AreaView alloc]initWithFrame:CGRectMake(0, 0, [UIScreen mainScreen].bounds.size.width,  CGRectGetHeight(self.view_SelectCity.frame))];
        _areaView.delegate = self;
    }
    return _areaView;
}

- (CommonCityView *)commonCityView
{
    if (!_commonCityView) {
        NSLog(@"provincesView %2f",self.view_coomonUseCity.frame.size.height);
        _commonCityView = [[CommonCityView alloc]initWithFrame:CGRectMake(0, 0, [UIScreen mainScreen].bounds.size.width,  CGRectGetHeight(self.view_coomonUseCity.frame))];
        _commonCityView.delegate = self;
    }
    return _commonCityView;
}
//- (void)provincesViewClickItem:(NSIndexPath *)indexPath ClickTitle:(NSString *)title
//{
//    NSLog(@"click item title is %@",title);
//}


#pragma mark - custom delegate

// Â∏∏Áî®ÂüéÂ∏ÇÁöÑÁÇπÂáª
- (void)commonCityViewClickItemCell:(WLTX_CommonCityCell *)cell clickItemIndexPath:(NSIndexPath *)indexPath ClickTitle:(NSString *)title
{
    NSLog(@"click item cell %@",cell);
    NSLog(@"click item title is %@",title);
    NSString *selectItemName = title;
    if (self.block) {
        
        if (self.type == WLTX_CommonSelectAreaType_ReleaseCarInfo) {
            self.block(cell.lb_title.text,self.type);
        }
        else
        {
            if ([selectItemName containsString:@"Â∏Ç"]) {
                selectItemName = [selectItemName stringByReplacingOccurrencesOfString:@"Â∏Ç"withString:@""];
            }
            self.block(selectItemName,self.type);
        }
        
    }
    [self.navigationController popViewControllerAnimated:YES];
    
}

// ÁúÅ‰ªΩÁÇπÂáª
- (void)provincesViewClickItemCell:(ProvincesCell *)cell clickItemIndexPath:(NSIndexPath *)indexPath ClickTitle:(NSString *)title
{
    NSLog(@"click item cell %@",cell);
    NSLog(@"click item title is %@",title);
    self.pStr = title;
    self.recordClickAllCityTitle = @""; // ÊØèÊ¨°ÁÇπÂáªÁúÅ‰ªΩÈÉΩË¶ÅÂ∞Ü‰πãÂâçÁöÑÊï∞ÊçÆÊ∏ÖÁ©∫
    self.recordClickAllCityTitle = title; // ËÆ∞ÂΩïÁÇπÂáªÁúÅ‰ªΩ Áî®‰∫éÂêéÈù¢ËøõË°åÊãºÊé•
    self.search.text = self.pStr;
    [self.btn_1 setTitleColor:[UIColor whiteColor] forState:0];
    [self.btn_2 setTitleColor:[UIColor whiteColor] forState:0];
    [self.btn_3 setTitleColor:[UIColor whiteColor] forState:0];
    
    
    self.img_1.image = [UIImage imageNamed:@""];
    self.img_2.image = [UIImage imageNamed:@""];
    self.img_3.image = [UIImage imageNamed:@""];
    
    
    
    [self.btn_2 setTitleColor:[UIColor orangeColor] forState:0];
    self.img_2.image = [UIImage imageNamed:@"integratedQuery_tu04"];
    
    
    self.provincesView.hidden = YES;
    self.areaView.hidden = YES;
    self.cityView.hidden = NO;
    // ÊãøÂà∞ÁúÅ‰ªΩ‰∏ãÈù¢ÁöÑÂüéÂ∏ÇÊï∞ÊçÆ
    _arrCity = [[_arrProvince objectAtIndex:indexPath.row]objectForKey:@"city"];
    // NSLog(@"ÈÄâ‰∏≠ÁúÅ‰ªΩÁöÑÂüéÂ∏Ç %@",_arrCity);
    NSMutableArray <NSString *> *arrCityStrArr = [NSMutableArray array];
    for (NSDictionary *dict in _arrCity) {
        NSString *arrCityName = dict[@"name"];
        [arrCityStrArr addObject:arrCityName];
    }
    NSLog(@"arrCityStrArr %@",arrCityStrArr);
    
    [self.view_SelectCity addSubview:self.cityView];
    self.cityView.dataArr = arrCityStrArr;
    
}

// Â∏ÇÁÇπÂáª
- (void)cityViewClickItemCell:(CitysCell *)cell clickItemIndexPath:(NSIndexPath *)indexPath ClickTitle:(NSString *)title
{
    NSLog(@"click item cell %@",cell);
    NSLog(@"click item title is %@",title);
    self.cStr = title;
    self.recordClickAllCityTitle = @"";
    self.recordClickAllCityTitle = [NSString stringWithFormat:@"%@-%@",self.pStr,title]; // ÊãºÊé•Ëµ∑Êù•
    self.search.text = self.recordClickAllCityTitle;
    
    [self.btn_1 setTitleColor:[UIColor whiteColor] forState:0];
    [self.btn_2 setTitleColor:[UIColor whiteColor] forState:0];
    [self.btn_3 setTitleColor:[UIColor whiteColor] forState:0];
    
    
    self.img_1.image = [UIImage imageNamed:@""];
    self.img_2.image = [UIImage imageNamed:@""];
    self.img_3.image = [UIImage imageNamed:@""];
    
    
    
    [self.btn_3 setTitleColor:[UIColor orangeColor] forState:0];
    self.img_3.image = [UIImage imageNamed:@"integratedQuery_tu04"];
    
    
    self.provincesView.hidden = YES;
    self.cityView.hidden = YES;
    self.areaView.hidden = NO;
    
    // ÊãøÂà∞ÁúÅ‰ªΩ‰∏ãÈù¢ÁöÑÂüéÂ∏ÇÊï∞ÊçÆ
    _arrDistrict = [[_arrCity objectAtIndex:0]objectForKey:@"area"];
    // NSLog(@"ÈÄâ‰∏≠ÁúÅ‰ªΩÁöÑÂüéÂ∏Ç %@",_arrCity);
    NSMutableArray <NSString *> *arrDistrictStrArr = [NSMutableArray array];
    for (NSString *arrDistrictName in _arrDistrict) {
        //        NSString *arrDistrictName = dict[@"name"];
        [arrDistrictStrArr addObject:arrDistrictName];
    }
    
    //
    [self.view_SelectCity addSubview:self.areaView];
    self.areaView.dataArr = arrDistrictStrArr;
}

// Âå∫ÂüüÁÇπÂáª ‰øùÂ≠òÊêúÁ¥¢
- (void)areaViewClickItemCell:(AreaCell *)cell clickItemIndexPath:(NSIndexPath *)indexPath ClickTitle:(NSString *)title
{
    NSLog(@"click item title is %@",title);
    self.aStr = title;
    self.recordClickAllCityTitle = @"";
    self.recordClickAllCityTitle = [NSString stringWithFormat:@"%@-%@-%@",self.pStr,self.cStr,title]; // ÊãºÊé•Ëµ∑Êù•
    self.search.text = self.recordClickAllCityTitle;
    NSLog(@"Â∞ÜÊï∞ÊçÆÊòæÁ§∫Âú®inputview %@",self.recordClickAllCityTitle);
}
#pragma mark  ‚úçüèª(Ëá™ÂÆö‰πâÊñπÊ≥ï) custom method end




#pragma mark delegate

- (BOOL)textFieldShouldReturn:(UITextField *)textField

{
    NSLog(@"return ÁÇπÂáª");
    return [textField resignFirstResponder];
    
}
// return ÊåâÈíÆÁöÑÁÇπÂáª
- (void)searchBarSearchButtonClicked:(UISearchBar *)searchBar
{
    [searchBar resignFirstResponder];
    
}
- (void)searchBar:(UISearchBar *)searchBar textDidChange:(NSString *)searchText
{
    //    if ([searchText isEqualToString:@"\n"]) {
    //        NSLog(@"ÂõûËΩ¶Êìç‰Ωú");
    //        [searchBar resignFirstResponder];
    //        return;
    //    }else
    if ([searchText isEqualToString:@""]) {
        NSLog(@"ÈáçÁΩÆUI");
        [self resetData];
        return;
    }
    NSLog(@"ÂéªÊêúÁ¥¢ searchtext is %@",searchText);
    //    [self netwrok_getSearchCityRequestWithName:searchText];
    
    NSDictionary *dict = @{
                           @"name":searchText,
                           };
    [self netwrok_getSearchCityRequestWithName:searchText withDict:dict];
    
}
- (void)resetData
{
    self.tableview.hidden = YES;
    [self.search resignFirstResponder];
    
    [self.btn_1 setTitleColor:[UIColor whiteColor] forState:0];
    [self.btn_2 setTitleColor:[UIColor whiteColor] forState:0];
    [self.btn_3 setTitleColor:[UIColor whiteColor] forState:0];
    self.img_1.image = [UIImage imageNamed:@""];
    self.img_2.image = [UIImage imageNamed:@""];
    self.img_3.image = [UIImage imageNamed:@""];
    
    
    //
    [self.btn_1 setTitleColor:[UIColor orangeColor] forState:0];
    self.img_1.image = [UIImage imageNamed:@"integratedQuery_tu03"];
    self.cityView.hidden = YES;
    self.areaView.hidden = YES;
    self.provincesView.hidden = NO;
    
    NSMutableArray <NSString *> *provinceStrArr = [NSMutableArray array];
    for (NSDictionary *dict in _arrProvince) {
        NSString *provinceName = dict[@"name"];
        [provinceStrArr addObject:provinceName];
    }
    // ÈáçÁΩÆÈúÄË¶ÅÂà†Èô§ÊâÄÊúâÁöÑÊï∞ÊçÆ
    [self.provincesView.dataArr removeAllObjects];
    [self.cityView.dataArr removeAllObjects];
    [self.areaView.dataArr removeAllObjects];
    [self.cityView.collectionView reloadData];
    [self.areaView.collectionView reloadData];
    [self.provincesView.collectionView reloadData];
    
    self.provincesView.dataArr = provinceStrArr;
    
}


#pragma mark - üèÉ(‰ª£ÁêÜ)Delegate start
#pragma mark - UITableViewDelegate, UITableViewDataSource
- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section {
    
    return self.showDataArr.count;
}

- (CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath {
    
    return 44;
}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath {
    
    //    WLTX_SpecialLineQueryCell  *cell = [tableView dequeueReusableCellWithIdentifier:WLTX_SpecialLineQueryCellID];
    UITableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:@"cell"];
    if (cell == nil) {
        cell = [[UITableViewCell alloc]initWithStyle:UITableViewCellStyleValue1 reuseIdentifier:@"cell"];
    }
    cell.textLabel.text = self.showDataArr[indexPath.row];
    
    cell.selectionStyle = UITableViewCellSelectionStyleNone;
    return cell;
    
}

- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath {
    
    [tableView deselectRowAtIndexPath:indexPath animated:YES];
    
    NSString *showData = self.showDataArr[indexPath.row];
    NSString *selectData = self.selectDataArr[indexPath.row];
    NSLog(@"ÊòæÁ§∫ÁöÑÂÜÖÂÆπÊòØ %@",showData);
    NSLog(@"ÊúÄÁªàÈÄâÊã©ÊòæÁ§∫ÁöÑÂÜÖÂÆπÊòØ %@",selectData);
    
    self.search.text = selectData;
    // ËøôÈáåÈúÄË¶ÅÊääÂÄºÂõûË∞ÉÂà∞‰∏ä‰∏Ä‰∏™È°µÈù¢
    //    if (self.block) {
    //        self.block(selectData);
    //        [self.navigationController popViewControllerAnimated:YES];
    //    }
    //    [self returnSelectCityName:^(NSString * _Nullable cityName) {
    //        self.block(selectData);
    //        [self.navigationController popViewControllerAnimated:YES];
    //
    //    }];
    
    NSMutableDictionary *dict = [NSMutableDictionary dictionary];
    [dict setObject:showData forKey:@"showTitle"];
    [dict setObject:selectData forKey:@"getTitle"];
    if (self.commonUseCity.count >=10) {
        NSLog(@"Á¨¨0‰∏™‰∏ãÊ†áÁöÑÊï∞ÁªÑÊòØ %@",self.commonUseCity[0]);
        [self.commonUseCity removeObjectAtIndex:0];
        
    }
    [self.commonUseCity addObject:dict];
    NSLog(@"commonUseCity %@",self.commonUseCity);
    // ‰øùÂ≠òÂà∞Êú¨Âú∞
    NSArray *arr = [self.commonUseCity copy];
    // Â≠òÂÇ®
    NSUserDefaults *userD = [NSUserDefaults standardUserDefaults];
    [userD setObject:arr forKey:@"commonUseCity"];
    NSLog(@"commonUseCity %@",[userD objectForKey:@"commonUseCity"]);
    
    if (self.block) {
        self.block(selectData,self.type);
    }
    [self.navigationController popViewControllerAnimated:YES];
}


#pragma mark - üì∂(ÁΩëÁªúËØ∑Ê±Ç)Network start
// ÂüéÂ∏ÇÊï∞ÊçÆ
- (void)netwrok_getJsonCityData
{
    //    NSLog(@"%@",Common_citySearch(searchName));
    [AFNetworkingTool getWithNotApiURLString:Common_cityJson parameters:nil resultClass:nil success:^(id result) {
        NSLog(@"result = %@",result);
    
        NSArray *jsonDataArr = result;
            _arrProvince= result;
            _arrCity=[[_arrProvince objectAtIndex:0] objectForKey:@"city"];
            _arrDistrict=[[_arrCity objectAtIndex:0] objectForKey:@"area"];
        
            //    NSLog(@" ÁúÅ‰ªΩ is %@, ÂüéÂ∏Ç is %@, Âå∫Âüü is %@",_arrProvince,_arrCity,_arrDistrict);
        
            NSLog(@" ÁúÅ‰ªΩ is %@",_arrProvince);
        
            NSMutableArray <NSString *> *provinceStrArr = [NSMutableArray array];
            for (NSDictionary *dict in _arrProvince) {
                NSString *provinceName = dict[@"name"];
                [provinceStrArr addObject:provinceName];
            }
        
            NSLog(@"ProvinceArr %@",provinceStrArr);
        
            _arrCity = [[_arrProvince objectAtIndex:2]objectForKey:@"city"];
            // NSLog(@"ÈÄâ‰∏≠ÁúÅ‰ªΩÁöÑÂüéÂ∏Ç %@",_arrCity);
            NSMutableArray <NSString *> *arrCityStrArr = [NSMutableArray array];
            for (NSDictionary *dict in _arrCity) {
                NSString *arrCityName = dict[@"name"];
                [arrCityStrArr addObject:arrCityName];
            }
            NSLog(@"arrCityStrArr %@",arrCityStrArr);
        
        
            _arrDistrict = [[_arrCity objectAtIndex:0]objectForKey:@"area"];
            // NSLog(@"ÈÄâ‰∏≠ÁúÅ‰ªΩÁöÑÂüéÂ∏Ç %@",_arrCity);
            NSMutableArray <NSString *> *arrDistrictStrArr = [NSMutableArray array];
            for (NSString *arrDistrictName in _arrDistrict) {
                //        NSString *arrDistrictName = dict[@"name"];
                [arrDistrictStrArr addObject:arrDistrictName];
            }
            NSLog(@"arrDistrictStrArr %@",arrDistrictStrArr);
        
        
            NSLog(@"select index 1 is arrDistrictStrArr %@",arrDistrictStrArr[1]);
        
            [self.view_coomonUseCity addSubview:self.commonCityView];
            self.commonCityView.dataArr = self.commonUseCity;
            [self.view_SelectCity addSubview:self.provincesView];
            self.provincesView.dataArr = provinceStrArr;
        
        
    } failure:^(NSError *error) {
//        [self.view makeToast:error.userInfo];
    }];
}
// ‰∏ìÁ∫øË∑ØÁ∫ø
- (void)netwrok_getSearchCityRequestWithName:(NSString *)searchName withDict:(NSDictionary *)dict
{
    NSLog(@"ÊêúÁ¥¢ÁöÑÂÜÖÂÆπ ÊòØ %@",searchName);
    //    NSLog(@"%@",Common_citySearch(searchName));
    [AFNetworkingTool getWithURLString:Common_citySearch parameters:dict resultClass:nil success:^(id result) {
        NSLog(@"result = %@",result);
        NSMutableArray *name = result[@"name"];
        NSMutableArray *data = result[@"data"];
        if (name.count <=0) {
            self.tableview.hidden = YES;
            return ;
        }
        NSLog(@"name %@",name);
        NSLog(@"data %@",data);
        
        self.showDataArr = name;
        self.selectDataArr = data;
        
        self.tableview.hidden = NO;
        [self.tableview reloadData];
        
    } failure:^(NSError *error) {
        
    }];
}
- (NSMutableArray *)commonUseCity
{
    if (!_commonUseCity) {
        _commonUseCity = [NSMutableArray array];
        
        NSUserDefaults *userD = [NSUserDefaults standardUserDefaults];
        NSArray *array = [userD objectForKey:@"commonUseCity"];
        if (array.count >0) {
            _commonUseCity = [NSMutableArray arrayWithArray:array];
        }
        else
        {
            NSLog(@"Êú¨Ê¨°ÁºìÂ≠òÊ≤°Êï∞ÊçÆ");
        }
        
    }
    return _commonUseCity;
}
#pragma mark üì∂(ÁΩëÁªúËØ∑Ê±Ç)Network end

@end
